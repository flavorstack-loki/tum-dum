{"ast":null,"code":"import { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ElementRef, inject, NgZone, PLATFORM_ID, forwardRef, Component, Input, Output, Renderer2, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Slick component\n */\nconst _c0 = [\"*\"];\nclass SlickCarouselComponent {\n  config;\n  afterChange = new EventEmitter();\n  beforeChange = new EventEmitter();\n  breakpoint = new EventEmitter();\n  destroy = new EventEmitter();\n  init = new EventEmitter();\n  $instance;\n  // access from parent component can be a problem with change detection timing. Please use afterChange output\n  currentIndex = 0;\n  slides = [];\n  initialized = false;\n  _removedSlides = [];\n  _addedSlides = [];\n  el = inject(ElementRef);\n  zone = inject(NgZone);\n  isServer = isPlatformServer(inject(PLATFORM_ID));\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.unslick();\n  }\n  ngAfterViewInit() {\n    this.ngAfterViewChecked();\n  }\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    if (this.isServer) {\n      return;\n    }\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        }\n        // if nextSlidesLength is zere, do nothing\n      } else if (nextSlidesLength === 0) {\n        // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n        this._addedSlides = [];\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n        this._removedSlides = [];\n      }\n    }\n  }\n  /**\n   * init slick\n   */\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({\n            event,\n            slick\n          });\n        });\n      });\n      this.$instance.slick(this.config);\n      this.zone.run(() => {\n        this.initialized = true;\n        this.currentIndex = this.config?.initialSlide || 0;\n      });\n      this.$instance.on('afterChange', (event, slick, currentSlide) => {\n        this.zone.run(() => {\n          this.afterChange.emit({\n            event,\n            slick,\n            currentSlide,\n            first: currentSlide === 0,\n            last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n          });\n          this.currentIndex = currentSlide;\n        });\n      });\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({\n            event,\n            slick,\n            currentSlide,\n            nextSlide\n          });\n          this.currentIndex = nextSlide;\n        });\n      });\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({\n            event,\n            slick,\n            breakpoint\n          });\n        });\n      });\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({\n            event,\n            slick\n          });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n  addSlide(slickItem) {\n    this._addedSlides.push(slickItem);\n  }\n  removeSlide(slickItem) {\n    this._removedSlides.push(slickItem);\n  }\n  /**\n   * Slick Method\n   */\n  slickGoTo(index) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n  slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n  slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n  slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n  slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n  unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n    this.initialized = false;\n  }\n  ngOnChanges(changes) {\n    if (this.initialized) {\n      const config = changes['config'];\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n  /** @nocollapse */\n  static ɵfac = function SlickCarouselComponent_Factory(t) {\n    return new (t || SlickCarouselComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SlickCarouselComponent,\n    selectors: [[\"ngx-slick-carousel\"]],\n    inputs: {\n      config: \"config\"\n    },\n    outputs: {\n      afterChange: \"afterChange\",\n      beforeChange: \"beforeChange\",\n      breakpoint: \"breakpoint\",\n      destroy: \"destroy\",\n      init: \"init\"\n    },\n    exportAs: [\"slick-carousel\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SlickCarouselComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function SlickCarouselComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickCarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-slick-carousel',\n      exportAs: 'slick-carousel',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SlickCarouselComponent),\n        multi: true\n      }],\n      template: '<ng-content></ng-content>'\n    }]\n  }], null, {\n    config: [{\n      type: Input\n    }],\n    afterChange: [{\n      type: Output\n    }],\n    beforeChange: [{\n      type: Output\n    }],\n    breakpoint: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    init: [{\n      type: Output\n    }]\n  });\n})();\nclass SlickItemDirective {\n  carousel = inject(SlickCarouselComponent, {\n    host: true\n  });\n  renderer = inject(Renderer2);\n  el = inject(ElementRef);\n  isServer = isPlatformServer(inject(PLATFORM_ID));\n  ngOnInit() {\n    this.carousel.addSlide(this);\n    if (this.isServer && this.carousel.slides.length > 0) {\n      // Do not show other slides in server side rendering (broken ui can be affacted to Core Web Vitals)\n      this.renderer.setStyle(this.el, 'display', 'none');\n    }\n  }\n  ngOnDestroy() {\n    this.carousel.removeSlide(this);\n  }\n  /** @nocollapse */\n  static ɵfac = function SlickItemDirective_Factory(t) {\n    return new (t || SlickItemDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SlickItemDirective,\n    selectors: [[\"\", \"ngxSlickItem\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSlickItem]'\n    }]\n  }], null, null);\n})();\nclass SlickCarouselModule {\n  /** @nocollapse */static ɵfac = function SlickCarouselModule_Factory(t) {\n    return new (t || SlickCarouselModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SlickCarouselModule\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickCarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SlickCarouselComponent, SlickItemDirective],\n      exports: [SlickCarouselComponent, SlickItemDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };","map":{"version":3,"names":["isPlatformServer","CommonModule","i0","EventEmitter","ElementRef","inject","NgZone","PLATFORM_ID","forwardRef","Component","Input","Output","Renderer2","Directive","NgModule","NG_VALUE_ACCESSOR","_c0","SlickCarouselComponent","config","afterChange","beforeChange","breakpoint","destroy","init","$instance","currentIndex","slides","initialized","_removedSlides","_addedSlides","el","zone","isServer","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","length","nextSlidesLength","initSlick","forEach","slickItem","push","runOutsideAngular","slick","nativeElement","idx","indexOf","filter","s","jQuery","on","event","run","emit","initialSlide","currentSlide","first","last","$slides","options","slidesToScroll","nextSlide","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh","newOptions","Object","assign","ɵfac","SlickCarouselComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","template","SlickCarouselComponent_Template","rf","ctx","ɵɵprojectionDef","ɵɵprojection","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","providers","SlickItemDirective","carousel","host","renderer","ngOnInit","setStyle","SlickItemDirective_Factory","ɵdir","ɵɵdefineDirective","SlickCarouselModule","SlickCarouselModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["E:/tumdum/node_modules/ngx-slick-carousel/fesm2022/ngx-slick-carousel.mjs"],"sourcesContent":["import { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ElementRef, inject, NgZone, PLATFORM_ID, forwardRef, Component, Input, Output, Renderer2, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Slick component\n */\nclass SlickCarouselComponent {\n    config;\n    afterChange = new EventEmitter();\n    beforeChange = new EventEmitter();\n    breakpoint = new EventEmitter();\n    destroy = new EventEmitter();\n    init = new EventEmitter();\n    $instance;\n    // access from parent component can be a problem with change detection timing. Please use afterChange output\n    currentIndex = 0;\n    slides = [];\n    initialized = false;\n    _removedSlides = [];\n    _addedSlides = [];\n    el = inject(ElementRef);\n    zone = inject(NgZone);\n    isServer = isPlatformServer(inject(PLATFORM_ID));\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n    ngAfterViewInit() {\n        this.ngAfterViewChecked();\n    }\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        if (this.isServer) {\n            return;\n        }\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            }\n            else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            }\n            else {\n                this._addedSlides.forEach(slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    });\n                });\n                this._addedSlides = [];\n                this._removedSlides.forEach(slickItem => {\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter(s => s !== slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickRemove', idx);\n                    });\n                });\n                this._removedSlides = [];\n            }\n        }\n    }\n    /**\n     * init slick\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(() => {\n            this.$instance = jQuery(this.el.nativeElement);\n            this.$instance.on('init', (event, slick) => {\n                this.zone.run(() => {\n                    this.init.emit({ event, slick });\n                });\n            });\n            this.$instance.slick(this.config);\n            this.zone.run(() => {\n                this.initialized = true;\n                this.currentIndex = this.config?.initialSlide || 0;\n            });\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({\n                        event,\n                        slick,\n                        currentSlide,\n                        first: currentSlide === 0,\n                        last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n                    });\n                    this.currentIndex = currentSlide;\n                });\n            });\n            this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n                this.zone.run(() => {\n                    this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n                    this.currentIndex = nextSlide;\n                });\n            });\n            this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n                this.zone.run(() => {\n                    this.breakpoint.emit({ event, slick, breakpoint });\n                });\n            });\n            this.$instance.on('destroy', (event, slick) => {\n                this.zone.run(() => {\n                    this.destroy.emit({ event, slick });\n                    this.initialized = false;\n                });\n            });\n        });\n    }\n    addSlide(slickItem) {\n        this._addedSlides.push(slickItem);\n    }\n    removeSlide(slickItem) {\n        this._removedSlides.push(slickItem);\n    }\n    /**\n     * Slick Method\n     */\n    slickGoTo(index) {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickGoTo', index);\n        });\n    }\n    slickNext() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickNext');\n        });\n    }\n    slickPrev() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPrev');\n        });\n    }\n    slickPause() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPause');\n        });\n    }\n    slickPlay() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPlay');\n        });\n    }\n    unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular(() => {\n                this.$instance.slick('unslick');\n            });\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    }\n    ngOnChanges(changes) {\n        if (this.initialized) {\n            const config = changes['config'];\n            if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n                const refresh = config.currentValue['refresh'];\n                const newOptions = Object.assign({}, config.currentValue);\n                delete newOptions['refresh'];\n                this.zone.runOutsideAngular(() => {\n                    this.$instance.slick('slickSetOption', newOptions, refresh);\n                });\n            }\n        }\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.2\", type: SlickCarouselComponent, selector: \"ngx-slick-carousel\", inputs: { config: \"config\" }, outputs: { afterChange: \"afterChange\", beforeChange: \"beforeChange\", breakpoint: \"breakpoint\", destroy: \"destroy\", init: \"init\" }, providers: [{\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef((() => SlickCarouselComponent)),\n                multi: true\n            }], exportAs: [\"slick-carousel\"], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-slick-carousel',\n                    exportAs: 'slick-carousel',\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((() => SlickCarouselComponent)),\n                            multi: true\n                        }],\n                    template: '<ng-content></ng-content>',\n                }]\n        }], propDecorators: { config: [{\n                type: Input\n            }], afterChange: [{\n                type: Output\n            }], beforeChange: [{\n                type: Output\n            }], breakpoint: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], init: [{\n                type: Output\n            }] } });\nclass SlickItemDirective {\n    carousel = inject(SlickCarouselComponent, { host: true });\n    renderer = inject(Renderer2);\n    el = inject(ElementRef);\n    isServer = isPlatformServer(inject(PLATFORM_ID));\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        if (this.isServer && this.carousel.slides.length > 0) {\n            // Do not show other slides in server side rendering (broken ui can be affacted to Core Web Vitals)\n            this.renderer.setStyle(this.el, 'display', 'none');\n        }\n    }\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickItemDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.2\", type: SlickItemDirective, selector: \"[ngxSlickItem]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxSlickItem]',\n                }]\n        }] });\n\nclass SlickCarouselModule {\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselModule, declarations: [SlickCarouselComponent,\n            SlickItemDirective], imports: [CommonModule], exports: [SlickCarouselComponent,\n            SlickItemDirective] });\n    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: SlickCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ],\n                    exports: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}